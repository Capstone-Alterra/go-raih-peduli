// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	multipart "mime/multipart"

	mock "github.com/stretchr/testify/mock"
)

// CloudStorageInterface is an autogenerated mock type for the CloudStorageInterface type
type CloudStorageInterface struct {
	mock.Mock
}

// DeleteFile provides a mock function with given fields: object
func (_m *CloudStorageInterface) DeleteFile(object string) error {
	ret := _m.Called(object)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(object)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UploadFile provides a mock function with given fields: file, object
func (_m *CloudStorageInterface) UploadFile(file multipart.File, object string) error {
	ret := _m.Called(file, object)

	var r0 error
	if rf, ok := ret.Get(0).(func(multipart.File, string) error); ok {
		r0 = rf(file, object)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCloudStorageInterface creates a new instance of CloudStorageInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCloudStorageInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *CloudStorageInterface {
	mock := &CloudStorageInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
