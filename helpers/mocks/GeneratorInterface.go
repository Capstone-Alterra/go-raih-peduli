// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// GeneratorInterface is an autogenerated mock type for the GeneratorInterface type
type GeneratorInterface struct {
	mock.Mock
}

// GenerateRandomID provides a mock function with given fields:
func (_m *GeneratorInterface) GenerateRandomID() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GenerateRandomOTP provides a mock function with given fields:
func (_m *GeneratorInterface) GenerateRandomOTP() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewGeneratorInterface creates a new instance of GeneratorInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGeneratorInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *GeneratorInterface {
	mock := &GeneratorInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
